/****************************************************************************
** Meta object code from reading C++ file 'TMxpEntityTagHandlerTest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.14.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'TMxpEntityTagHandlerTest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.14.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_TMxpEntityTagHandlerTest_t {
    QByteArrayData data[18];
    char stringdata0[253];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TMxpEntityTagHandlerTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TMxpEntityTagHandlerTest_t qt_meta_stringdata_TMxpEntityTagHandlerTest = {
    {
QT_MOC_LITERAL(0, 0, 24), // "TMxpEntityTagHandlerTest"
QT_MOC_LITERAL(1, 25, 9), // "parseNode"
QT_MOC_LITERAL(2, 35, 23), // "QSharedPointer<MxpNode>"
QT_MOC_LITERAL(3, 59, 0), // ""
QT_MOC_LITERAL(4, 60, 7), // "tagText"
QT_MOC_LITERAL(5, 68, 12), // "processInput"
QT_MOC_LITERAL(6, 81, 14), // "TMxpProcessor&"
QT_MOC_LITERAL(7, 96, 9), // "processor"
QT_MOC_LITERAL(8, 106, 12), // "std::string&"
QT_MOC_LITERAL(9, 119, 5), // "input"
QT_MOC_LITERAL(10, 125, 11), // "testPublish"
QT_MOC_LITERAL(11, 137, 11), // "testPrivate"
QT_MOC_LITERAL(12, 149, 18), // "testAddRemoveStart"
QT_MOC_LITERAL(13, 168, 16), // "testAddRemoveEnd"
QT_MOC_LITERAL(14, 185, 28), // "testAddRemovePartOfItemValue"
QT_MOC_LITERAL(15, 214, 17), // "testInterpolation"
QT_MOC_LITERAL(16, 232, 10), // "testDelete"
QT_MOC_LITERAL(17, 243, 9) // "testEmpty"

    },
    "TMxpEntityTagHandlerTest\0parseNode\0"
    "QSharedPointer<MxpNode>\0\0tagText\0"
    "processInput\0TMxpProcessor&\0processor\0"
    "std::string&\0input\0testPublish\0"
    "testPrivate\0testAddRemoveStart\0"
    "testAddRemoveEnd\0testAddRemovePartOfItemValue\0"
    "testInterpolation\0testDelete\0testEmpty"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TMxpEntityTagHandlerTest[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      10,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    1,   64,    3, 0x08 /* Private */,
       5,    2,   67,    3, 0x08 /* Private */,
      10,    0,   72,    3, 0x08 /* Private */,
      11,    0,   73,    3, 0x08 /* Private */,
      12,    0,   74,    3, 0x08 /* Private */,
      13,    0,   75,    3, 0x08 /* Private */,
      14,    0,   76,    3, 0x08 /* Private */,
      15,    0,   77,    3, 0x08 /* Private */,
      16,    0,   78,    3, 0x08 /* Private */,
      17,    0,   79,    3, 0x08 /* Private */,

 // slots: parameters
    0x80000000 | 2, QMetaType::QString,    4,
    QMetaType::Void, 0x80000000 | 6, 0x80000000 | 8,    7,    9,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TMxpEntityTagHandlerTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<TMxpEntityTagHandlerTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: { QSharedPointer<MxpNode> _r = _t->parseNode((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QSharedPointer<MxpNode>*>(_a[0]) = std::move(_r); }  break;
        case 1: _t->processInput((*reinterpret_cast< TMxpProcessor(*)>(_a[1])),(*reinterpret_cast< std::string(*)>(_a[2]))); break;
        case 2: _t->testPublish(); break;
        case 3: _t->testPrivate(); break;
        case 4: _t->testAddRemoveStart(); break;
        case 5: _t->testAddRemoveEnd(); break;
        case 6: _t->testAddRemovePartOfItemValue(); break;
        case 7: _t->testInterpolation(); break;
        case 8: _t->testDelete(); break;
        case 9: _t->testEmpty(); break;
        default: ;
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject TMxpEntityTagHandlerTest::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_TMxpEntityTagHandlerTest.data,
    qt_meta_data_TMxpEntityTagHandlerTest,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *TMxpEntityTagHandlerTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TMxpEntityTagHandlerTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TMxpEntityTagHandlerTest.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TMxpEntityTagHandlerTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 10)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 10;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 10)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 10;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
