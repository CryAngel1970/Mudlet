name: ðŸ“¦ Build Mudlet Flatpak Repo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Scheduled run, e.g., daily at midnight

env:
  APP_ID: org.mudlet.mudlet
  MANIFEST_PATH: ${{ github.workspace }}/CI/${{ env.APP_ID }}.yaml
  BUNDLE: "${{ env.APP_ID }}.flatpak"
  DOCKER_REGISTRY: "docker.io/bilelmoussaoui/flatpak-github-actions"
  RUNTIME_NAME: "kde"
  RUNTIME_VERSION: "5.15-23.08"
  DOCKER_IMAGE: ${{ env.DOCKER_REGISTRY }}:${{ env.RUNTIME_NAME }}-${{ env.RUNTIME_VERSION }}
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

jobs:
  build-flatpak:
    runs-on: ubuntu-latest
    container:
      image: ${{ env.DOCKER_IMAGE }}
    steps:
    - name: Checkout Mudlet source code
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0
    - name: Setup Flatpak
      run: |
        flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    - name: Setup GPG
      run: |
        gpg --list-keys --with-keygrip
        echo "allow-preset-passphrase" >> ~/.gnupg/gpg-agent.conf
        gpg-connect-agent reloadagent /bye
        echo ${{ env.GPG_PASSPHRASE }} | /usr/libexec/gpg-preset-passphrase --preset ${{ env.GPG_KEY_GREP }}
        gpg --import --batch ${{ env.GPG_PRIVATE_KEY }}
    - name: Build and Install Flatpak
      run: |
        flatpak-builder build --user --install-deps-from=flathub --gpg-sign=${{ env.GPG_KEY_ID }} --disable-rofiles-fuse --disable-updates --force-clean --repo=repo ${{ env.MANIFEST_PATH }}
    - name: Generate Flatpak Bundle
      run: |
        flatpak build-bundle --gpg-sign=${{ env.GPG_KEY_ID }} repo ${{ env.BUNDLE }} --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo ${{ env.APP_ID }}
    - name: Update Flatpak Repo
      run: |
        flatpak build-update-repo --gpg-sign=${{ env.GPG_KEY_ID }} --generate-static-deltas --prune repo/
    - name: Upload Repo
      uses: actions/upload-artifact@v4
      with:
        name: flatpak-repo
        path: repo
        retention-days: 7

  deploy-to-github-pages:
    needs: build-flatpak
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download Flatpak Repo Artifact
      uses: actions/download-artifact@v4
      with:
        name: flatpak-repo
    - name: Setup Deployment Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y rsync
    - name: Prepare GitHub Pages Deployment
      run: |
        mkdir public
        rsync -av --exclude='public' --exclude='.git
